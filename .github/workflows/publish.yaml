name: Publish

on:
  workflow_dispatch:
    branches:
      - develop
    inputs:
      version:
        description: 'Version number for the release'
        required: true
env:
  IMAGE_NAME: calorieapp

jobs:
  build:
    name: Build and Publish Artifact
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'adopt'
          cache: maven
      - name: Package Maven Project
        run: mvn -B package --file pom.xml
      - name: Publish WAR
        uses: actions/upload-artifact@v3
        with:
          name: CalorieApp.war
          path: target/*.war
      - name: Publish Swagger
        uses: actions/upload-artifact@v3
        with:
          name: openapi.yaml
          path: target/swagger/openapi.yaml

  docker-build:
    name: Build Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'adopt'
          cache: maven
      - name: Package Maven Project
        run: mvn -B package --file pom.xml
      - name: Build Docker Image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"

      - name: Export Docker Image
        run: docker export --output="calorieapp.tar" $IMAGE_NAME

      - name: Publish Image
        uses: actions/upload-artifact@v3
        with:
          name: CalorieApp.tar
          path: calorieapp.tar

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          # This changes all uppercase characters to lowercase.
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # This strips the git ref prefix from the version.
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # This strips the "v" prefix from the tag name.
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # This uses the Docker `latest` tag convention.
          [ "$VERSION" == "main" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

  release:
    name: Create Release and Attach Artifacts
    runs-on: ubuntu-latest

    needs:
      - build
      - docker-build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version }}
          release_name: Release ${{ github.event.inputs.version }}
          body: Release Notes for ${{ github.event.inputs.version }}
          draft: false
          prerelease: false

      - name: Upload Artifacts to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/*.war
          asset_name: CalorieApp.war
          asset_content_type: application/octet-stream

      - name: Upload Swagger to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/swagger/openapi.yaml
          asset_name: openapi.yaml
          asset_content_type: application/x-yaml

      - name: Upload Docker Image to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: calorieapp.tar
          asset_name: calorieapp.tar
          asset_content_type: application/octet-stream
